var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=exports.BaseFormDateTime=exports.propTypes=exports.DateTimeBaseInputDefaultProps=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var React=_interopRequireWildcard(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _reactNative=require("react-native");var _datetimepicker=_interopRequireDefault(require("@react-native-community/datetimepicker"));var _moment=_interopRequireDefault(require("moment"));var _FormInputContainer=_interopRequireDefault(require("./FormInputContainer"));var _themes=require("./themes");var _utils=require("./utils");var _this=this,_jsxFileName="C:\\Users\\alvin\\Downloads\\Repositories\\react-native-basic-components\\src\\FormDateTime.tsx";var DefaultDateFormat="MMM DD, YYYY";var DefaultDateTimeFormat="MMM DD, YYYY hh:mm A";var DateTimeBaseInputDefaultProps={allowDefaultStyle:true,placeholder:"Select date"};exports.DateTimeBaseInputDefaultProps=DateTimeBaseInputDefaultProps;var propTypes={displayFormat:_propTypes["default"].string,value:_propTypes["default"].instanceOf(Date),onChange:_propTypes["default"].func,onInputPress:_propTypes["default"].func};exports.propTypes=propTypes;var BaseFormDateTime=function BaseFormDateTime(_ref){var placeholder=_ref.placeholder,value=_ref.value,invalid=_ref.invalid,allowDefaultStyle=_ref.allowDefaultStyle,displayFormat=_ref.displayFormat,mode=_ref.mode,style=_ref.style,filledStyle=_ref.filledStyle,invalidStyle=_ref.invalidStyle,onChange=_ref.onChange,onInputPress=_ref.onInputPress,display=_ref.display,otherProps=(0,_objectWithoutProperties2["default"])(_ref,["placeholder","value","invalid","allowDefaultStyle","displayFormat","mode","style","filledStyle","invalidStyle","onChange","onInputPress","display"]);var _React$useState=React.useState(false),_React$useState2=(0,_slicedToArray2["default"])(_React$useState,2),visible=_React$useState2[0],setVisible=_React$useState2[1];var valueFormat=React.useMemo(function(){if(!!displayFormat){return displayFormat;}return mode==="date"?DefaultDateFormat:DefaultDateTimeFormat;},[displayFormat,mode]);var compileStyle=React.useMemo(function(){return(0,_utils.compileTextStyles)(_themes.ThemeFormDateTime.style,style,allowDefaultStyle);},[allowDefaultStyle,style,_themes.ThemeFormDateTime.style]);var compiledFilledStyle=React.useMemo(function(){if(!value){return null;}return(0,_utils.compileTextStyles)(_themes.ThemeFormDateTime.filledStyle,filledStyle,allowDefaultStyle);},[allowDefaultStyle,value,filledStyle,_themes.ThemeFormDateTime.filledStyle]);var compiledInvalidStyle=React.useMemo(function(){if(!invalid){return null;}return(0,_utils.compileTextStyles)(_themes.ThemeFormDateTime.invalidStyle,invalidStyle,allowDefaultStyle);},[allowDefaultStyle,invalid,invalidStyle,_themes.ThemeFormDateTime.invalidStyle]);var handleChange=function handleChange(_,selectedDate){var currentDate=selectedDate||value;setVisible(_reactNative.Platform.OS==="ios");return onChange&&onChange(currentDate);};var handlePress=function handlePress(event){setVisible(true);onInputPress&&onInputPress(event);};var compiledStyles=_reactNative.StyleSheet.flatten([compileStyle,compiledFilledStyle,compiledInvalidStyle]);return React.createElement(React.Fragment,null,React.createElement(_reactNative.TouchableOpacity,{onPress:handlePress,__self:_this,__source:{fileName:_jsxFileName,lineNumber:160,columnNumber:7}},React.createElement(_reactNative.Text,{style:compiledStyles,__self:_this,__source:{fileName:_jsxFileName,lineNumber:161,columnNumber:9}},!!value?(0,_moment["default"])(value).format(valueFormat):placeholder)),visible&&React.createElement(_datetimepicker["default"],(0,_extends2["default"])({},otherProps,{display:display,value:value||new Date(),onChange:handleChange,__self:_this,__source:{fileName:_jsxFileName,lineNumber:166,columnNumber:9}})));};exports.BaseFormDateTime=BaseFormDateTime;BaseFormDateTime.displayName=_utils.DisplayNamePrefix+"BaseFormDateTime";BaseFormDateTime.propTypes=propTypes;var FormDateTime=function FormDateTime(_ref2){var leftComponent=_ref2.leftComponent,rightComponent=_ref2.rightComponent,containerStyle=_ref2.containerStyle,filledContainerStyle=_ref2.filledContainerStyle,focusedContainerStyle=_ref2.focusedContainerStyle,invalidContainerStyle=_ref2.invalidContainerStyle,inputProps=(0,_objectWithoutProperties2["default"])(_ref2,["leftComponent","rightComponent","containerStyle","filledContainerStyle","focusedContainerStyle","invalidContainerStyle"]);return React.createElement(_FormInputContainer["default"],{filled:!!inputProps.value,invalid:!!inputProps.invalid,allowDefaultStyle:inputProps.allowDefaultStyle,style:containerStyle,filledStyle:filledContainerStyle,focusedStyle:focusedContainerStyle,invalidStyle:invalidContainerStyle,__self:_this,__source:{fileName:_jsxFileName,lineNumber:192,columnNumber:5}},React.createElement(BaseFormDateTime,(0,_extends2["default"])({},inputProps,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:201,columnNumber:7}})));};var _default=FormDateTime;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,