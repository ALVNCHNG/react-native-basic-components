var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=exports.BaseFormText=exports.TextInputDefaultProps=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _FormInputContainer=_interopRequireDefault(require("./FormInputContainer"));var _themes=require("./themes");var _utils=require("./utils");var _this=this,_jsxFileName="C:\\Users\\alvin\\Downloads\\Repositories\\react-native-basic-components\\src\\FormText.tsx";var TextInputDefaultProps={allowDefaultStyle:true};exports.TextInputDefaultProps=TextInputDefaultProps;var BaseFormText=React.forwardRef(function(_ref,ref){var allowDefaultStyle=_ref.allowDefaultStyle,invalid=_ref.invalid,value=_ref.value,style=_ref.style,filledStyle=_ref.filledStyle,focusedStyle=_ref.focusedStyle,invalidStyle=_ref.invalidStyle,onBlur=_ref.onBlur,onChange=_ref.onChange,onFocus=_ref.onFocus,props=(0,_objectWithoutProperties2["default"])(_ref,["allowDefaultStyle","invalid","value","style","filledStyle","focusedStyle","invalidStyle","onBlur","onChange","onFocus"]);var _React$useState=React.useState(false),_React$useState2=(0,_slicedToArray2["default"])(_React$useState,2),focused=_React$useState2[0],setFocused=_React$useState2[1];var compiledStyle=React.useMemo(function(){return(0,_utils.compileTextStyles)(_themes.ThemeFormText.style,style,allowDefaultStyle);},[allowDefaultStyle,style,_themes.ThemeFormText.style]);var compiledFilledStyle=React.useMemo(function(){if(!value){return null;}return(0,_utils.compileTextStyles)(_themes.ThemeFormText.filledStyle,filledStyle,allowDefaultStyle);},[allowDefaultStyle,value,filledStyle,_themes.ThemeFormText.filledStyle]);var compiledFocusedStyle=React.useMemo(function(){if(!focused){return null;}return(0,_utils.compileTextStyles)(_themes.ThemeFormText.focusedStyle,focusedStyle,allowDefaultStyle);},[allowDefaultStyle,focused,focusedStyle,_themes.ThemeFormText.focusedStyle]);var compiledInvalidStyle=React.useMemo(function(){if(!invalid){return null;}return(0,_utils.compileTextStyles)(_themes.ThemeFormText.invalidStyle,invalidStyle,allowDefaultStyle);},[allowDefaultStyle,invalid,invalidStyle,_themes.ThemeFormText.invalidStyle]);var handleBlur=function handleBlur(event){setFocused(false);onBlur&&onBlur(event);};var handleFocus=function handleFocus(event){setFocused(true);onFocus&&onFocus(event);};var compiledStyles=_reactNative.StyleSheet.flatten([compiledStyle,compiledFilledStyle,compiledFocusedStyle,compiledInvalidStyle]);return React.createElement(_reactNative.TextInput,(0,_extends2["default"])({},props,{onChangeText:onChange,onFocus:handleFocus,onBlur:handleBlur,style:compiledStyles,value:value,ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:119,columnNumber:7}}));});exports.BaseFormText=BaseFormText;BaseFormText.defaultProps=TextInputDefaultProps;BaseFormText.displayName=_utils.DisplayNamePrefix+"FormText";var FormText=React.forwardRef(function(_ref2,ref){var leftComponent=_ref2.leftComponent,rightComponent=_ref2.rightComponent,containerStyle=_ref2.containerStyle,filledContainerStyle=_ref2.filledContainerStyle,focusedContainerStyle=_ref2.focusedContainerStyle,invalidContainerStyle=_ref2.invalidContainerStyle,inputProps=(0,_objectWithoutProperties2["default"])(_ref2,["leftComponent","rightComponent","containerStyle","filledContainerStyle","focusedContainerStyle","invalidContainerStyle"]);console.log("Ref: ",ref);return React.createElement(_FormInputContainer["default"],{filled:!!inputProps.value,invalid:!!inputProps.invalid,allowDefaultStyle:inputProps.allowDefaultStyle,style:containerStyle,filledStyle:filledContainerStyle,focusedStyle:focusedContainerStyle,invalidStyle:invalidContainerStyle,__self:_this,__source:{fileName:_jsxFileName,lineNumber:154,columnNumber:7}},React.createElement(BaseFormText,(0,_extends2["default"])({},inputProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:163,columnNumber:9}})));});var _default=FormText;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,