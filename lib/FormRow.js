var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=exports.FormRowStyles=exports.FormRowDefaultProps=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _uuid=require("uuid");var _FormGroup=_interopRequireDefault(require("./FormGroup"));var _themes=require("./themes");var _utils=require("./utils");var _this=this,_jsxFileName="C:\\Users\\alvin\\Downloads\\Repositories\\react-native-basic-components\\src\\FormRow.tsx";var FormRowDefaultProps={allowDefaultStyle:true,gap:20};exports.FormRowDefaultProps=FormRowDefaultProps;var FormRow=function FormRow(_ref){var allowDefaultStyle=_ref.allowDefaultStyle,gap=_ref.gap,children=_ref.children,style=_ref.style,viewProps=(0,_objectWithoutProperties2["default"])(_ref,["allowDefaultStyle","gap","children","style"]);var compiledStyle=React.useMemo(function(){return(0,_utils.compileViewStyles)(_themes.ThemeFormRow.style,style,allowDefaultStyle);},[allowDefaultStyle,style,_themes.ThemeFormRow.style]);var stylizeformGroupChild=function stylizeformGroupChild(formGroupComponent,isLastComponent){return React.createElement(_FormGroup["default"],(0,_extends2["default"])({},formGroupComponent.props,{style:[FormRowStyles.formGroupStyle,!isLastComponent&&{marginRight:gap}],key:(0,_uuid.v4)()}),formGroupComponent.props.children);};var renderModifiedChildren=function renderModifiedChildren(childComponent){if(!Array.isArray(childComponent)){return stylizeformGroupChild(childComponent,true);}var lastComponentIndex=childComponent.length-1;return childComponent.map(function(formGroupComponent,formGroupComponentIndex){return stylizeformGroupChild(formGroupComponent,formGroupComponentIndex===lastComponentIndex);});};return React.createElement(_reactNative.View,(0,_extends2["default"])({},viewProps,{style:compiledStyle,__self:_this,__source:{fileName:_jsxFileName,lineNumber:89,columnNumber:5}}),renderModifiedChildren(children));};FormRow.defaultProps=FormRowDefaultProps;FormRow.displayName=_utils.DisplayNamePrefix+"FormRow";var FormRowStyles=_reactNative.StyleSheet.create({formGroupStyle:{flex:1,marginBottom:0}});exports.FormRowStyles=FormRowStyles;var _default=FormRow;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Gb3JtUm93LnRzeCJdLCJuYW1lcyI6WyJGb3JtUm93RGVmYXVsdFByb3BzIiwiYWxsb3dEZWZhdWx0U3R5bGUiLCJnYXAiLCJGb3JtUm93IiwiY2hpbGRyZW4iLCJzdHlsZSIsInZpZXdQcm9wcyIsImNvbXBpbGVkU3R5bGUiLCJSZWFjdCIsInVzZU1lbW8iLCJUaGVtZUZvcm1Sb3ciLCJzdHlsaXplZm9ybUdyb3VwQ2hpbGQiLCJmb3JtR3JvdXBDb21wb25lbnQiLCJpc0xhc3RDb21wb25lbnQiLCJjcmVhdGVFbGVtZW50IiwiRm9ybUdyb3VwIiwicHJvcHMiLCJGb3JtUm93U3R5bGVzIiwiZm9ybUdyb3VwU3R5bGUiLCJtYXJnaW5SaWdodCIsImtleSIsInJlbmRlck1vZGlmaWVkQ2hpbGRyZW4iLCJjaGlsZENvbXBvbmVudCIsIkFycmF5IiwiaXNBcnJheSIsImxhc3RDb21wb25lbnRJbmRleCIsImxlbmd0aCIsIm1hcCIsImZvcm1Hcm91cENvbXBvbmVudEluZGV4IiwiZGVmYXVsdFByb3BzIiwiZGlzcGxheU5hbWUiLCJEaXNwbGF5TmFtZVByZWZpeCIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJmbGV4IiwibWFyZ2luQm90dG9tIl0sIm1hcHBpbmdzIjoiNmVBQUEsb0RBQ0EseUNBQ0EsMEJBQ0EsOERBQ0EsZ0NBRUEsOEIseUhBc0JPLEdBQU1BLENBQUFBLG1CQUFpQyxDQUFHLENBQy9DQyxpQkFBaUIsQ0FBRSxJQUQ0QixDQUUvQ0MsR0FBRyxDQUFFLEVBRjBDLENBQTFDLEMsZ0RBS1AsR0FBTUMsQ0FBQUEsT0FBMkMsQ0FBRyxRQUE5Q0EsQ0FBQUEsT0FBOEMsTUFNOUMsSUFMSkYsQ0FBQUEsaUJBS0ksTUFMSkEsaUJBS0ksQ0FKSkMsR0FJSSxNQUpKQSxHQUlJLENBSEpFLFFBR0ksTUFISkEsUUFHSSxDQUZKQyxLQUVJLE1BRkpBLEtBRUksQ0FEREMsU0FDQywrRkFDSixHQUFNQyxDQUFBQSxhQUFhLENBQUdDLEtBQUssQ0FBQ0MsT0FBTixDQUNwQixpQkFBTSw2QkFBa0JDLHFCQUFhTCxLQUEvQixDQUFzQ0EsS0FBdEMsQ0FBNkNKLGlCQUE3QyxDQUFOLEVBRG9CLENBRXBCLENBQUNBLGlCQUFELENBQW9CSSxLQUFwQixDQUEyQksscUJBQWFMLEtBQXhDLENBRm9CLENBQXRCLENBV0EsR0FBTU0sQ0FBQUEscUJBQXVDLENBQUcsUUFBMUNBLENBQUFBLHFCQUEwQyxDQUM5Q0Msa0JBRDhDLENBRTlDQyxlQUY4QyxRQUk5Q0wsQ0FBQUEsS0FBSyxDQUFDTSxhQUFOLENBQ0VDLHFCQURGLDZCQUdPSCxrQkFBa0IsQ0FBQ0ksS0FIMUIsRUFJSVgsS0FBSyxDQUFFLENBQ0xZLGFBQWEsQ0FBQ0MsY0FEVCxDQUVMLENBQUNMLGVBQUQsRUFBb0IsQ0FBRU0sV0FBVyxDQUFFakIsR0FBZixDQUZmLENBSlgsQ0FRSWtCLEdBQUcsQ0FBRSxjQVJULEdBVUVSLGtCQUFrQixDQUFDSSxLQUFuQixDQUF5QlosUUFWM0IsQ0FKOEMsRUFBaEQsQ0FzQkEsR0FBTWlCLENBQUFBLHNCQUFzQixDQUFHLFFBQXpCQSxDQUFBQSxzQkFBeUIsQ0FBQ0MsY0FBRCxDQUFxQyxDQUNsRSxHQUFJLENBQUNDLEtBQUssQ0FBQ0MsT0FBTixDQUFjRixjQUFkLENBQUwsQ0FBb0MsQ0FDbEMsTUFBT1gsQ0FBQUEscUJBQXFCLENBQUNXLGNBQUQsQ0FBaUIsSUFBakIsQ0FBNUIsQ0FDRCxDQUVELEdBQU1HLENBQUFBLGtCQUFrQixDQUFHSCxjQUFjLENBQUNJLE1BQWYsQ0FBd0IsQ0FBbkQsQ0FDQSxNQUFPSixDQUFBQSxjQUFjLENBQUNLLEdBQWYsQ0FBbUIsU0FBQ2Ysa0JBQUQsQ0FBcUJnQix1QkFBckIsQ0FBaUQsQ0FDekUsTUFBT2pCLENBQUFBLHFCQUFxQixDQUMxQkMsa0JBRDBCLENBRTFCZ0IsdUJBQXVCLEdBQUtILGtCQUZGLENBQTVCLENBSUQsQ0FMTSxDQUFQLENBTUQsQ0FaRCxDQWNBLE1BQ0UscUJBQUMsaUJBQUQsNkJBQVVuQixTQUFWLEVBQXFCLEtBQUssQ0FBRUMsYUFBNUIsOEVBQ0djLHNCQUFzQixDQUFDakIsUUFBRCxDQUR6QixDQURGLENBS0QsQ0EzREQsQ0E2REFELE9BQU8sQ0FBQzBCLFlBQVIsQ0FBdUI3QixtQkFBdkIsQ0FDQUcsT0FBTyxDQUFDMkIsV0FBUixDQUF5QkMsd0JBQXpCLFdBRU8sR0FBTWQsQ0FBQUEsYUFBYSxDQUFHZSx3QkFBV0MsTUFBWCxDQUFrQixDQUM3Q2YsY0FBYyxDQUFFLENBQ2RnQixJQUFJLENBQUUsQ0FEUSxDQUVkQyxZQUFZLENBQUUsQ0FGQSxDQUQ2QixDQUFsQixDQUF0QixDLGlEQU9RaEMsTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBWaWV3LCBWaWV3UHJvcHMsIFZpZXdTdHlsZSB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuaW1wb3J0IHsgdjQgYXMgdXVpZCB9IGZyb20gXCJ1dWlkXCI7XHJcbmltcG9ydCBGb3JtR3JvdXAsIHsgRm9ybUdyb3VwUHJvcHNXaXRoQ2hpbGRyZW4gfSBmcm9tIFwiLi9Gb3JtR3JvdXBcIjtcclxuaW1wb3J0IHsgVGhlbWVGb3JtUm93IH0gZnJvbSBcIi4vdGhlbWVzXCI7XHJcbmltcG9ydCB7IEdlbmVyaWNTdHlsZSB9IGZyb20gXCIuL3R5cGVzXCI7XHJcbmltcG9ydCB7IGNvbXBpbGVWaWV3U3R5bGVzLCBEaXNwbGF5TmFtZVByZWZpeCB9IGZyb20gXCIuL3V0aWxzXCI7XHJcblxyXG50eXBlIHN0eWxpemVmb3JtR3JvdXAgPSAoXHJcbiAgZm9ybUdyb3VwQ29tcG9uZW50OiBSZWFjdC5SZWFjdEVsZW1lbnQ8Rm9ybUdyb3VwUHJvcHNXaXRoQ2hpbGRyZW4+LFxyXG4gIGlzTGFzdENvbXBvbmVudD86IGJvb2xlYW5cclxuKSA9PiBKU1guRWxlbWVudDtcclxuXHJcbmV4cG9ydCB0eXBlIEZvcm1Sb3dTdHlsZSA9IEdlbmVyaWNTdHlsZTxWaWV3U3R5bGUsIFwic3R5bGVcIj47XHJcblxyXG5leHBvcnQgdHlwZSBGb3JtUm93Q2hpbGRyZW4gPVxyXG4gIHwgUmVhY3QuUmVhY3RFbGVtZW50PEZvcm1Hcm91cFByb3BzV2l0aENoaWxkcmVuPlxyXG4gIHwgQXJyYXk8UmVhY3QuUmVhY3RFbGVtZW50PEZvcm1Hcm91cFByb3BzV2l0aENoaWxkcmVuPj47XHJcblxyXG5leHBvcnQgdHlwZSBGb3JtUm93UHJvcHMgPSBWaWV3UHJvcHMgJiB7XHJcbiAgYWxsb3dEZWZhdWx0U3R5bGU/OiBib29sZWFuO1xyXG4gIGdhcD86IG51bWJlcjtcclxufTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRm9ybVJvd1Byb3BzV2l0aENoaWxkcmVuIGV4dGVuZHMgRm9ybVJvd1Byb3BzIHtcclxuICBjaGlsZHJlbjogRm9ybVJvd0NoaWxkcmVuO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgRm9ybVJvd0RlZmF1bHRQcm9wczogRm9ybVJvd1Byb3BzID0ge1xyXG4gIGFsbG93RGVmYXVsdFN0eWxlOiB0cnVlLFxyXG4gIGdhcDogMjAsXHJcbn07XHJcblxyXG5jb25zdCBGb3JtUm93OiBSZWFjdC5GQzxGb3JtUm93UHJvcHNXaXRoQ2hpbGRyZW4+ID0gKHtcclxuICBhbGxvd0RlZmF1bHRTdHlsZSxcclxuICBnYXAsXHJcbiAgY2hpbGRyZW4sXHJcbiAgc3R5bGUsXHJcbiAgLi4udmlld1Byb3BzXHJcbn0pID0+IHtcclxuICBjb25zdCBjb21waWxlZFN0eWxlID0gUmVhY3QudXNlTWVtbyhcclxuICAgICgpID0+IGNvbXBpbGVWaWV3U3R5bGVzKFRoZW1lRm9ybVJvdy5zdHlsZSwgc3R5bGUsIGFsbG93RGVmYXVsdFN0eWxlKSxcclxuICAgIFthbGxvd0RlZmF1bHRTdHlsZSwgc3R5bGUsIFRoZW1lRm9ybVJvdy5zdHlsZV1cclxuICApO1xyXG5cclxuICAvKipcclxuICAgKiBSZW5kZXJzIGEgTW9kaWZpZWRmb3JtR3JvdXBDb21wb25lbnQgaW5zaWRlIHRoZSBGb3JtUm93IHdpdGggc3R5bGUgcGFzc2VkIGFzIHByb3BzXHJcbiAgICogQHBhcmFtIGZvcm1Hcm91cENvbXBvbmVudCBmb3JtR3JvdXBDb21wb25lbnRcclxuICAgKiBAcGFyYW0gaXNMYXN0Q29tcG9uZW50IGJvb2xlYW5cclxuICAgKiBAcmV0dXJucyBNb2RpZmllZGZvcm1Hcm91cENvbXBvbmVudFxyXG4gICAqL1xyXG4gIGNvbnN0IHN0eWxpemVmb3JtR3JvdXBDaGlsZDogc3R5bGl6ZWZvcm1Hcm91cCA9IChcclxuICAgIGZvcm1Hcm91cENvbXBvbmVudCxcclxuICAgIGlzTGFzdENvbXBvbmVudFxyXG4gICkgPT5cclxuICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXHJcbiAgICAgIEZvcm1Hcm91cCxcclxuICAgICAge1xyXG4gICAgICAgIC4uLmZvcm1Hcm91cENvbXBvbmVudC5wcm9wcyxcclxuICAgICAgICBzdHlsZTogW1xyXG4gICAgICAgICAgRm9ybVJvd1N0eWxlcy5mb3JtR3JvdXBTdHlsZSxcclxuICAgICAgICAgICFpc0xhc3RDb21wb25lbnQgJiYgeyBtYXJnaW5SaWdodDogZ2FwIH0sXHJcbiAgICAgICAgXSxcclxuICAgICAgICBrZXk6IHV1aWQoKSxcclxuICAgICAgfSxcclxuICAgICAgZm9ybUdyb3VwQ29tcG9uZW50LnByb3BzLmNoaWxkcmVuXHJcbiAgICApO1xyXG5cclxuICAvKipcclxuICAgKiBIYW5kbGVzIHRoZSByZW5kZXJpbmcgYW5kIG1vZGlmaWNhdGlvbiBvZiBjaGlsZHJlbiBzdHlsZVxyXG4gICAqIEBwYXJhbSBjaGlsZENvbXBvbmVudCBmb3JtR3JvdXAgfCBmb3JtR3JvdXBbXVxyXG4gICAqIEByZXR1cm5zIE1vZGlmaWVkZm9ybUdyb3VwIHwgTW9kaWZpZWRmb3JtR3JvdXBbXVxyXG4gICAqL1xyXG4gIGNvbnN0IHJlbmRlck1vZGlmaWVkQ2hpbGRyZW4gPSAoY2hpbGRDb21wb25lbnQ6IEZvcm1Sb3dDaGlsZHJlbikgPT4ge1xyXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGNoaWxkQ29tcG9uZW50KSkge1xyXG4gICAgICByZXR1cm4gc3R5bGl6ZWZvcm1Hcm91cENoaWxkKGNoaWxkQ29tcG9uZW50LCB0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBsYXN0Q29tcG9uZW50SW5kZXggPSBjaGlsZENvbXBvbmVudC5sZW5ndGggLSAxO1xyXG4gICAgcmV0dXJuIGNoaWxkQ29tcG9uZW50Lm1hcCgoZm9ybUdyb3VwQ29tcG9uZW50LCBmb3JtR3JvdXBDb21wb25lbnRJbmRleCkgPT4ge1xyXG4gICAgICByZXR1cm4gc3R5bGl6ZWZvcm1Hcm91cENoaWxkKFxyXG4gICAgICAgIGZvcm1Hcm91cENvbXBvbmVudCxcclxuICAgICAgICBmb3JtR3JvdXBDb21wb25lbnRJbmRleCA9PT0gbGFzdENvbXBvbmVudEluZGV4XHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFZpZXcgey4uLnZpZXdQcm9wc30gc3R5bGU9e2NvbXBpbGVkU3R5bGV9PlxyXG4gICAgICB7cmVuZGVyTW9kaWZpZWRDaGlsZHJlbihjaGlsZHJlbil9XHJcbiAgICA8L1ZpZXc+XHJcbiAgKTtcclxufTtcclxuXHJcbkZvcm1Sb3cuZGVmYXVsdFByb3BzID0gRm9ybVJvd0RlZmF1bHRQcm9wcztcclxuRm9ybVJvdy5kaXNwbGF5TmFtZSA9IGAke0Rpc3BsYXlOYW1lUHJlZml4fUZvcm1Sb3dgO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZvcm1Sb3dTdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgZm9ybUdyb3VwU3R5bGU6IHtcclxuICAgIGZsZXg6IDEsXHJcbiAgICBtYXJnaW5Cb3R0b206IDAsXHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtUm93O1xyXG4iXX0=